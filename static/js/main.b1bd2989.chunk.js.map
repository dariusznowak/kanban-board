{"version":3,"sources":["components/Header.js","components/Footer.js","components/SingleTask.js","components/TaskBoard.js","components/TaskInput.js","components/BoardsContainer.js","components/App.js","index.js"],"names":["Header","className","Footer","Date","getFullYear","SingleTask","props","useDrag","type","data","item","id","boardType","noteContent","taskTab","collect","monitor","isDragging","drag","ref","style","opacity","content","onClick","pushNext","deleteFun","pushToPrevious","TaskBoard","useDrop","accept","filter","noteItem","drop","boardName","moveTask","isOver","background","headingText","map","index","TaskInput","useState","inputText","setInputText","onChange","event","target","value","name","rows","maxLength","onAddTask","preventDefault","disabled","trim","BoardsContainer","localStorageData","localStorage","getItem","JSON","parse","toDoTable","setToDoTask","inProgressTable","setInProgressTask","completedTable","setCompletedTask","pushToNext","note","boardNameProp","deleteNote","prevNotes","whereToMove","useEffect","setItem","stringify","App","DndProvider","backend","HTML5Backend","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1bd2989.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header-component\">\r\n      <h1>Kanban board</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p>Copyright ⓒ {new Date().getFullYear() + \" Dariusz Nowak\"}</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { useDrag } from \"react-dnd\";\r\n\r\nfunction SingleTask(props) {\r\n  function handleNextButton() {\r\n    props.pushNext(props.taskTab[props.id], props.data);\r\n    props.deleteFun(props.id, props.data);\r\n  }\r\n\r\n  function handleDeleteButton() {\r\n    props.deleteFun(props.id, props.data);\r\n  }\r\n\r\n  function handleBackButton() {\r\n    props.pushToPrevious(props.taskTab[props.id], props.data);\r\n    props.deleteFun(props.id, props.data);\r\n  }\r\n\r\n  /*drag and drop - useDrag() */\r\n  const [{ isDragging }, drag] = useDrag({\r\n    //type: ItemTypes.TODO /*deklaracja typu tego co wróci*/,\r\n    type: props.data /*deklaracja typu tego co wróci*/,\r\n    item: {\r\n      //obiekt zawierający nowe propsy, które będą wykorzystane w komponencie Taskboard w użycie hooka useDrop()!!!\r\n      id: props.id,\r\n      boardType: props.data,\r\n      noteContent: props.taskTab[props.id],\r\n    },\r\n    collect: (monitor) => ({\r\n      //funkcja collect sprawi, że gdy isDragging jest true to doda ona propa do komponentu (wyżej)\r\n      isDragging: !!monitor.isDragging(), //monitor has a prop isDragging, which is true <=> gdy tylko ten item is dragged\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"single-task\"\r\n      ref={drag}\r\n      style={{ opacity: isDragging ? \"0.1\" : \"1\" }}\r\n    >\r\n      <p>{props.content}</p>\r\n      <div className=\"single-task-buttons-box\">\r\n        {(props.data === \"to-do-board\" ||\r\n          props.data === \"in-progress-board\") && (\r\n          <button className=\"button button-next\" onClick={handleNextButton}>\r\n            <span className=\"fas fa-check\" />\r\n          </button>\r\n        )}\r\n        {(props.data === \"in-progress-board\" ||\r\n          props.data === \"completed-board\") && (\r\n          <button className=\"button button-back\" onClick={handleBackButton}>\r\n            <span className=\"fas fa-backward\" />\r\n          </button>\r\n        )}\r\n        <button className=\"button button-delete\" onClick={handleDeleteButton}>\r\n          <span className=\"far fa-trash-alt\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleTask;\r\n","import React from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport SingleTask from \"./SingleTask\";\r\n\r\nfunction TaskBoard(props) {\r\n  //funkcja do aktualizacji tablic tasków przy drag-drop\r\n  function moveTaskToDropzone(id, boardName, content) {\r\n    props.moveTask(content, props.data);\r\n    props.deleteFun(id, boardName);\r\n  }\r\n\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: [\"to-do-board\", \"in-progress-board\", \"completed-board\"].filter(\r\n      (noteItem) => {\r\n        return props.data !== noteItem;\r\n      }\r\n    ), //podajemy jakie typy akceptować\r\n    drop: (item, monitor) =>\r\n      moveTaskToDropzone(item.id, item.boardType, item.noteContent),\r\n    collect: (monitor) => ({\r\n      isOver: !!monitor.isOver(),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"task-board\"\r\n      ref={drop}\r\n      style={{ background: isOver && \"rgba(77, 77, 77, 0.426)\" }}\r\n    >\r\n      <div className=\"task-board-heading\">\r\n        <h1>{props.headingText}</h1>\r\n      </div>\r\n      <div className={\"board-like \" + props.data}>\r\n        {props.taskTab.map((noteItem, index) => {\r\n          return (\r\n            <SingleTask\r\n              content={noteItem}\r\n              key={index}\r\n              id={index}\r\n              data={props.data}\r\n              pushNext={props.pushNext}\r\n              deleteFun={props.deleteFun}\r\n              pushToPrevious={props.pushToPrevious}\r\n              taskTab={props.taskTab}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskBoard;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction TaskInput(props) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    setInputText(event.target.value);\r\n  }\r\n\r\n  function submitNote(event) {\r\n    props.onAddTask(inputText);\r\n    event.preventDefault();\r\n    setInputText(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-input\">\r\n      <form>\r\n        <h2>Create a task</h2>\r\n        <textarea\r\n          className=\"text-area-input\"\r\n          onChange={handleChange}\r\n          name=\"task-content\"\r\n          rows=\"3\"\r\n          value={inputText}\r\n          maxLength=\"300\"\r\n        ></textarea>\r\n\r\n        <button\r\n          className=\"input-button\"\r\n          onClick={submitNote}\r\n          disabled={!inputText || !inputText.trim()}\r\n        >\r\n          Add\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TaskBoard from \"./TaskBoard\";\r\nimport TaskInput from \"./TaskInput\";\r\n\r\nfunction BoardsContainer() {\r\n  const [toDoTable, setToDoTask] = useState(() => {\r\n    const localStorageData = localStorage.getItem(\"toDoTable\");\r\n    return localStorageData ? JSON.parse(localStorageData) : [];\r\n  });\r\n  const [inProgressTable, setInProgressTask] = useState(() => {\r\n    const localStorageData = localStorage.getItem(\"inProgressTable\");\r\n    return localStorageData ? JSON.parse(localStorageData) : [];\r\n  });\r\n  const [completedTable, setCompletedTask] = useState(() => {\r\n    const localStorageData = localStorage.getItem(\"completedTable\");\r\n    return localStorageData ? JSON.parse(localStorageData) : [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"toDoTable\", JSON.stringify(toDoTable));\r\n  }, [toDoTable]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"inProgressTable\", JSON.stringify(inProgressTable));\r\n  }, [inProgressTable]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"completedTable\", JSON.stringify(completedTable));\r\n  }, [completedTable]);\r\n\r\n  function onAddTask(inputText) {\r\n    setToDoTask(() => {\r\n      return [inputText, ...toDoTable];\r\n    });\r\n  }\r\n\r\n  function pushToNext(note, boardNameProp) {\r\n    if (boardNameProp === \"to-do-board\") {\r\n      setInProgressTask(() => {\r\n        return [note, ...inProgressTable];\r\n      });\r\n    } else if (boardNameProp === \"in-progress-board\") {\r\n      setCompletedTask(() => {\r\n        return [note, ...completedTable];\r\n      });\r\n    }\r\n  }\r\n\r\n  function pushToPrevious(note, boardNameProp) {\r\n    if (boardNameProp === \"in-progress-board\") {\r\n      setToDoTask(() => {\r\n        return [note, ...toDoTable];\r\n      });\r\n    } else if (boardNameProp === \"completed-board\") {\r\n      setInProgressTask(() => {\r\n        return [note, ...inProgressTable];\r\n      });\r\n    }\r\n  }\r\n\r\n  function deleteNote(id, boardNameProp) {\r\n    if (boardNameProp === \"to-do-board\") {\r\n      setToDoTask((prevNotes) => {\r\n        return prevNotes.filter((noteItem, index) => {\r\n          return index !== id;\r\n        });\r\n      });\r\n    } else if (boardNameProp === \"in-progress-board\") {\r\n      setInProgressTask((prevNotes) => {\r\n        return prevNotes.filter((noteItem, index) => {\r\n          return index !== id;\r\n        });\r\n      });\r\n    } else if (boardNameProp === \"completed-board\") {\r\n      setCompletedTask((prevNotes) => {\r\n        return prevNotes.filter((noteItem, index) => {\r\n          return index !== id;\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  function moveTask(content, whereToMove) {\r\n    if (whereToMove === \"to-do-board\") {\r\n      setToDoTask(() => {\r\n        return [content, ...toDoTable];\r\n      });\r\n    } else if (whereToMove === \"in-progress-board\") {\r\n      setInProgressTask(() => {\r\n        return [content, ...inProgressTable];\r\n      });\r\n    } else if (whereToMove === \"completed-board\") {\r\n      setCompletedTask(() => {\r\n        return [content, ...completedTable];\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"boards-container\">\r\n      <TaskInput onAddTask={onAddTask} />\r\n\r\n      <div className=\"boards\">\r\n        <TaskBoard\r\n          taskTab={toDoTable}\r\n          pushNext={pushToNext}\r\n          deleteFun={deleteNote}\r\n          pushToPrevious={pushToPrevious}\r\n          moveTask={moveTask}\r\n          data=\"to-do-board\"\r\n          headingText={\"To do\"}\r\n        />\r\n        <TaskBoard\r\n          taskTab={inProgressTable}\r\n          pushNext={pushToNext}\r\n          deleteFun={deleteNote}\r\n          pushToPrevious={pushToPrevious}\r\n          moveTask={moveTask}\r\n          data=\"in-progress-board\"\r\n          headingText={\"In progress\"}\r\n        />\r\n        <TaskBoard\r\n          taskTab={completedTable}\r\n          pushNext={pushToNext}\r\n          deleteFun={deleteNote}\r\n          pushToPrevious={pushToPrevious}\r\n          moveTask={moveTask}\r\n          data=\"completed-board\"\r\n          headingText={\"Completed\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BoardsContainer;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport BoardsContainer from \"./BoardsContainer\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\nfunction App() {\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <div className=\"app\">\r\n        <Header />\r\n        <BoardsContainer />\r\n        <Footer />\r\n      </div>\r\n    </DndProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}